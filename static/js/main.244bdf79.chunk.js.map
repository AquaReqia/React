{"version":3,"sources":["ChildPage.js","App.js","reportWebVitals.js","index.js"],"names":["ChildPage","props","useState","setWebSocket","setChart","candleSeries","setCandleSeries","useEffect","fetch","then","response","json","data","console","log","catch","error","Param","Date","getTime","require","createHmac","update","digest","method","headers","ok","statusText","ws","WebSocket","onmessage","jsonString","jsonValue","JSON","parse","currentBar","open","k","o","high","h","low","l","close","c","time","t","newChart","createChart","containerId","width","height","crosshair","mode","CrosshairMode","Normal","addCandlestickSeries","id","className","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8bA4EeA,EAzEG,SAAAC,GAAU,IAAD,EACWC,mBAAS,MADpB,mBACLC,GADK,aAEGD,mBAAS,MAFZ,mBAETE,GAFS,aAGiBF,mBAAS,MAH1B,mBAGhBG,EAHgB,KAGFC,EAHE,KAQvBC,qBAAU,WACNC,MAAM,kHACHC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GAAI,OAAIC,QAAQC,IAAI,CAAEF,YAC3BG,OAAM,SAAAC,GAAK,OAAIH,QAAQG,MAAM,CAAEA,aAElC,IACIC,EAAQ,eADF,IAAIC,MACkBC,UAAY,GAG5CF,EAAQA,EAAQ,cAFHG,EAAQ,KACHC,WAAW,SAdZ,oEAcoCC,OAAOL,GAAOM,OAAO,OAE1Ef,MAAM,yDAA2DS,EAAO,CACpEO,OAAQ,MACRC,QAAS,CACL,eApBG,sEAsBRhB,MAAK,SAAAC,GACJ,GAAIA,EAASgB,GACT,OAAOhB,EAASC,OAEpBE,QAAQC,IAAIJ,EAASiB,eAEtBlB,MAAK,SAAAG,GAAI,OAAIC,QAAQC,IAAI,CAAEF,YAC3BG,OAAM,SAAAC,GAAK,OAAIH,QAAQG,MAAM,CAAEA,eACnC,IAGH,IAAIY,EAAK,IAAIC,UAAU,qDA6BvB,OA5BAD,EAAGE,UAAa,SAACC,GACb,IAAIC,EAAYC,KAAKC,MAAMH,EAAWnB,MAClCuB,EAAa,CACbC,KAAMJ,EAAUK,EAAEC,EAClBC,KAAMP,EAAUK,EAAEG,EAClBC,IAAKT,EAAUK,EAAEK,EACjBC,MAAOX,EAAUK,EAAEO,EACnBC,KAAMb,EAAUK,EAAES,GAEH,MAAhBzC,GACCA,EAAaiB,OAAOa,IAI5B5B,qBAAU,WACN,IAAIwC,EAAWC,YAAY/C,EAAMgD,YAAa,CAC1CC,MAAO,KACPC,OAAQ,IACRC,UAAW,CACPC,KAAMC,IAAcC,UAI5BpD,EAAayB,GACbtB,EAAgByC,EAASS,wBACzBpD,EAAS2C,KACV,CAAC9C,IAGA,8BACMA,GAASA,EAAMgD,aAAe,qBAAKQ,GAAIxD,EAAMgD,YAAaS,UAAW,wBC/DpEC,MANf,WACE,OACE,cAAC,EAAD,CAAWV,YAAY,YCQZW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.244bdf79.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { createChart, CrosshairMode } from 'lightweight-charts';\r\n\r\nconst ChildPage = props => {\r\n    const [webSocket, setWebSocket] = useState(null);\r\n    const [chart, setChart] = useState(null);\r\n    const [candleSeries, setCandleSeries] = useState(null);\r\n    const apiKey = \"tSB2NlHJ9YcQ7rXbzcKTSXZqWmc4y25Ta2rqgXaBoxwOj2uug0DzpZjJju3n4Qi6\";\r\n    const apiSecretKey = \"z7HFiZAQFFElGVEGEVpCGOQX31YWkfwdoI43RpunW9JMvY2yvyZXOh4P8XnRlNGl\";\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.binance.com/api/v3/klines?symbol=USDTTRY&interval=1m&startTime=1612108487267&endTime=1612108547267\")\r\n          .then(response => {\r\n            return response.json()\r\n          })\r\n          .then(data => console.log({ data }))\r\n          .catch(error => console.error({ error }));\r\n\r\n        var now = new Date()\r\n        var Param = \"timestamp=\" + (now.getTime() - 3);\r\n        var crypto = require(\"crypto\");\r\n        var sign = crypto.createHmac('sha256', apiSecretKey).update(Param).digest('hex');\r\n        Param = Param + \"&signature=\" + sign;\r\n        fetch(\"https://api.binance.com/sapi/v1/capital/config/getall?\" + Param, {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-MBX-APIKEY': apiKey,\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n            console.log(response.statusText);\r\n          })\r\n          .then(data => console.log({ data }))\r\n          .catch(error => console.error({ error }));\r\n    }, [])\r\n   \r\n\r\n    var ws = new WebSocket('wss://stream.binance.com:9443/ws/ethusdt@kline_1m');\r\n    ws.onmessage  = (jsonString) => {\r\n        var jsonValue = JSON.parse(jsonString.data);\r\n        var currentBar = {\r\n            open: jsonValue.k.o,\r\n            high: jsonValue.k.h,\r\n            low: jsonValue.k.l,\r\n            close: jsonValue.k.c,\r\n            time: jsonValue.k.t,\r\n        };\r\n        if(candleSeries != null){\r\n            candleSeries.update(currentBar);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        var newChart = createChart(props.containerId, {\r\n            width: 1024,\r\n            height: 768,\r\n            crosshair: {\r\n                mode: CrosshairMode.Normal,\r\n            },\r\n        });\r\n\r\n        setWebSocket(ws);\r\n        setCandleSeries(newChart.addCandlestickSeries());\r\n        setChart(newChart);\r\n    }, [props]);\r\n\r\n    return (\r\n        <div>\r\n            { props && props.containerId && <div id={props.containerId} className={'LightweightChart'} /> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChildPage;","import ChildPage from './ChildPage';\n\nfunction App() {\n  return (\n    <ChildPage containerId='TestID' /> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}